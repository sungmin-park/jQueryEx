// Generated by IcedCoffeeScript 1.4.0a
(function() {
  var $, iced, __iced_deferrals, __iced_k, __iced_k_noop,
    __slice = [].slice,
    _this = this;

  iced = {
    Deferrals: (function() {

      function _Class(_arg) {
        this.continuation = _arg;
        this.count = 1;
        this.ret = null;
      }

      _Class.prototype._fulfill = function() {
        if (!--this.count) return this.continuation(this.ret);
      };

      _Class.prototype.defer = function(defer_params) {
        var _this = this;
        ++this.count;
        return function() {
          var inner_params, _ref;
          inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          if (defer_params != null) {
            if ((_ref = defer_params.assign_fn) != null) {
              _ref.apply(null, inner_params);
            }
          }
          return _this._fulfill();
        };
      };

      return _Class;

    })(),
    findDeferral: function() {
      return null;
    },
    trampoline: function(_fn) {
      return _fn();
    }
  };
  __iced_k = __iced_k_noop = function() {};

  $ = jQuery;

  if (window.ko) {
    ko.bindingHandlers.youtube = {
      update: function(element, valueAccessor) {
        var id;
        id = ko.utils.unwrapObservable(valueAccessor());
        return $(element).youtube({
          id: id
        });
      }
    };
    ko.bindingHandlers.facebook_like = {
      update: function(element, valueAccessor) {
        var fb;
        fb = ko.utils.unwrapObservable(valueAccessor());
        return $(element).facebook_like(fb);
      }
    };
  }

  $.YouTube = (function() {

    YouTube.prototype._page = "https://www.youtube.com";

    function YouTube(id) {
      this.id = id;
      this.url = "" + this._page + "/watch?" + ($.param({
        v: this.id
      }));
      this.thumbnail = "https://img.youtube.com/vi/" + this.id + "/0.jpg";
      this.embed = "" + this._page + "/embed/" + this.id;
    }

    return YouTube;

  })();

  $.fn.youtube = function(_arg) {
    var id, yt;
    id = _arg.id;
    yt = new $.YouTube(id);
    return this.empty().append($('<iframe>').attr('src', yt.embed).css('width', '100%').css('height', '100%'));
  };

  $.fn.facebook_like = function(_arg) {
    var href, send, show_faces;
    href = _arg.href, show_faces = _arg.show_faces, send = _arg.send;
    if (send == null) send = false;
    if (show_faces == null) show_faces = false;
    return this.each(function() {
      var _ref;
      $(this).empty().append($('<div>').addClass('fb-like').attr('data-show-faces', show_faces).attr('data-send', send).attr('data-href', href));
      return (_ref = window.FB) != null ? _ref.XFBML.parse(this) : void 0;
    });
  };

  $.fn.formify = function() {
    return this.click(function() {
      var data, form;
      data = $(this).data();
      if (data.confirm) if (!confirm(data.confirm)) return false;
      form = $('<form>').attr('method', 'post').attr('action', this.href);
      form.submit();
      return false;
    });
  };

  $.fn.confirmify = function() {
    var handler;
    handler = function() {
      if (confirm($(this).data().confirm)) return true;
      return false;
    };
    return this.each(function() {
      if ($(this).is('form')) {
        return $(this).submit(handler);
      } else {
        return $(this).click(handler);
      }
    });
  };

  (function(__iced_k) {
    __iced_deferrals = new iced.Deferrals(__iced_k, {
      filename: "jquery.ex.iced"
    });
    $(__iced_deferrals.defer({
      lineno: 68
    }));
    __iced_deferrals._fulfill();
  })(function() {
    $('.formify').formify();
    $('.confirmify').confirmify();
    $('.fb-share').popupWindow({
      width: 626,
      height: 346,
      centerBrowser: 1
    });
    return $('.focused').select();
  });

}).call(this);
